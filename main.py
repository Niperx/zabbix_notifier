import logging
import time
from aiogram.utils.exceptions import BotBlocked
from aiogram import Bot, Dispatcher, executor, types

import parser_module as pars
from config import TOKEN

#ops
id_access = [388850647, 252457864, 102749042, 674126672, 190112213]
#               –Ø       –ö–∏—Ä–∏–ª–ª     –í–æ–¥–æ–ø—å—è–Ω–æ–≤   –¢–æ–ª—è
cmds = ['–ü—Ä–æ–∑–≤–æ–Ω', '–ö–∞–±–µ–ª—å—Ç–µ—Å—Ç', 'todo']

addr = []
addresss = ' '

todoo = ['–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞', '–†–µ—à–∞–µ–º —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–∫–∞–º–∏',
         '–î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ—Ö —Å—Ç–∞—Ä—à–∏—Ö', '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –≤ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–º —Ä–µ–∂–∏–º–µ',
         '–ó–∞–ª–∏—Ç—å –Ω–∞ –±—ç–∫–∞–ø', '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫', '–°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏',
         '–ù–æ–≤—ã–µ –§—É–Ω–∫—Ü–∏–∏ - –°—Ç–∞—Ç–∞ –∑–∞ –¥–µ–Ω—å –ø–æ –∑–≤–æ–Ω–∫–∞–º,–∫–∞–±–µ–ª—å—Ç–µ—Å—Ç (–ø—Ä–æ–±–ª–µ–º–∞ —Å –≤–ø–Ω),–¥–æ–ø—Ä–æ—Å –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Ç–µ—Ö –∫—Ç–æ –≤–∑—è–ª –ø—Ä–æ–∑–≤–æ–Ω',
         '']

# –ü–û–õ–ï–¢–ï–õ–ò!
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")

# –§—É–Ω–∫—Ü–∏–∏
def get_keyboard(addr):
    buttons = []
    for i in range(1, 10):
        buttons.append(types.InlineKeyboardButton(text=str(addr[i]), callback_data=int(i)))
    keyboard = types.InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
    keyboard.add(*buttons)
    return keyboard

# –ó–∞–ø—É—Å–∫
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)


@dp.message_handler(commands='start')
async def cmd_test1(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    for i in cmds:
        keyboard.add(types.KeyboardButton(text=i))
    print(message.chat.id)
    await message.answer('–ü—Ä–∏–≤–µ—Ç!, –ß–µ –º—É—Ç–∏–º?) ', reply_markup=keyboard)


@dp.message_handler()
async def get_message(message: types.Message):
    print(str(message.from_user.id) + ' –ù–∞–ø–∏—Å–∞–ª ' + message.text)
    if message.text == "–ü–∏—É –ü–∏—É":
        await message.answer('–¢—ã —á—Ç–æ, –ö–∞–±–µ–ª—å—Ç–µ—Å—Ç? ')
    elif message.text == "–ö–∞–±–µ–ª—å—Ç–µ—Å—Ç":
        await message.answer('–ü–∏—É –ü–∏—É')
    elif message.text == "todo":
        for i in todoo:
            await message.answer(i)
    elif message.text == "–ü—Ä–æ–∑–≤–æ–Ω":
        start_time = time.time()
        print('Start time')
        if message.from_user.id in id_access:
            global addr
            print('–ù–∞—á–∞–ª –ü–∞—Ä—Å ' + "--- %s seconds ---" % (time.time() - start_time))
            await message.answer('–í–∑–ª–æ–º –ø–µ–Ω—Ç–∞–≥–æ–Ω–∞, –ø–æ–≥–æ–¥–∏—Ç–µ')
            addr = pars.main()
            print('–ó–∞–ø–∞—Ä—Å–∏–ª–∏ ' + "--- %s seconds ---" % (time.time() - start_time))  # `10 –°–ï–ö–£–ù–î ???
            await message.reply('–ö–∞–≤–æ?', reply_markup=get_keyboard(addr))

            # print("--- %s seconds ---" % (time.time() - start_time))
            print(message.chat.username + ' –ù–∞–∂–∞–ª –Ω–∞ –ø—Ä–æ–∑–≤–æ–Ω')


@dp.callback_query_handler()
async def callbacks_num(call):
    global addresss
    if call.data == 'zabral':
        # print (call.from_user.username)
        await call.message.edit_text('‚ùóÔ∏è' + addresss + '‚ùóÔ∏è –ü—Ä–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ —Å–≤–µ—Ç—É –∏ –¢–í –ü–æ–∑—è–∑—è ')
        await call.message.answer('@' + str(call.from_user.username) + ' –ó–∞–±—Ä–∞–ª(–∞) –ø—Ä–æ–∑–≤–æ–Ω  - –°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–µ ! ')
    else:
        await call.message.edit_text(text='‚òÄ' + str(addr[
                                                        int(call.data)]) + ' - –£–ª–µ—Ç–µ–ª–æ –Ω–∞ –ø—Ä–æ–∑–≤–æ–Ω !‚òÄ')  # ))chat_id=call.message.chat.id, message_id=call.message.message_id  ,
        buttons = []
        buttons.append(types.InlineKeyboardButton(text='–Ø –ó–∞–±–µ—Ä—É ', callback_data='zabral'))
        yakeyboard = types.InlineKeyboardMarkup(row_width=1)
        yakeyboard.add(*buttons)
        addresss = str(addr[int(call.data)])
        await bot.send_message(-747200418, '‚ùóÔ∏è' + addresss + '‚ùóÔ∏è –ü—Ä–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ —Å–≤–µ—Ç—É –∏ –¢–í –ü–æ–∑—è–∑—è ',
                               reply_markup=yakeyboard)

'''
  requests.get('https://api.telegram.org/bot{}/sendMessage'.format(tokenbot), params=dict(
  chat_id='-747200418',
  text='‚ùóÔ∏è' +  str(addr[int(call.data)]) + '‚ùóÔ∏è –ü—Ä–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ —Å–≤–µ—Ç—É –∏ –¢–í –ü–æ–∑—è–∑—è '))
'''


@dp.errors_handler(exception=BotBlocked)
async def error_bot_blocked(update: types.Update, exception: BotBlocked):
    print(f"–ú–µ–Ω—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!\n–°–æ–æ–±—â–µ–Ω–∏–µ: {update}\n–û—à–∏–±–∫–∞: {exception}")

    return True


# @dp.message_handler(commands="block")
# async def cmd_block(message: types.Message):
#     await time.sleep(10.0)  # –ó–¥–æ—Ä–æ–≤—ã–π —Å–æ–Ω –Ω–∞ 10 —Å–µ–∫—É–Ω–¥
#     await message.reply("–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã")


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    executor.start_polling(dp, skip_updates=True)
'''

# https://docs.st65.ru/dosearchsite.action?cql=siteSearch+~+%22%D0%93%D0%BE%D1%80%D0%BE%D0%B4%D0%B0+%22&queryString=%D0%93%D0%BE%D1%80%D0%BE%D0%B4%D0%B0+
# –ß–∞—Ç –∞–π–¥–∏ –º—ç–π–Ω –≥—Ä—É–ø–ø—ã -787891312

# –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É answer –∏ reply –ø—Ä–æ—Å—Ç–∞—è: –ø–µ—Ä–≤—ã–π –º–µ—Ç–æ–¥ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ—Ç –∂–µ —á–∞—Ç, –≤—Ç–æ—Ä–æ–π –¥–µ–ª–∞–µ—Ç "–æ—Ç–≤–µ—Ç" –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ message:
# –î–ª—è –æ—Ç–≤–µ—Ç–∞ –≤ –æ–ø—Ä–µ–¥–µ–Ω–Ω—ã–π —á–∞—Ç
#@dp.message_handler(commands="dice")

#async def cmd_dice(message: types.Message):
#    await message.bot.send_dice(-100123456789, emoji="üé≤")

'''